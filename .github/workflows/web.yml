name: Build & Deploy Web App

on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Install Dioxus CLI
        run: cargo install dioxus-cli

      - name: Create .env file
        env:
          APP_URL: ${{ secrets.APP_URL }}
          API_URL: ${{ secrets.API_URL }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
          SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: printf "APP_URL=$APP_URL\nAPI_URL=$API_URL\nSUPABASE_URL=$SUPABASE_URL\nSUPABASE_API_KEY=$SUPABASE_API_KEY\nSUPABASE_JWT_SECRET=$SUPABASE_JWT_SECRET\nDATABASE_URL=$DATABASE_URL\n" > .env

      - name: Build
        run: mv Cargo.toml Cargo.toml.bak && cp Cargo.web.toml Cargo.toml && dx build --release --platform web && cp ./dist/index.html ./dist/404.html

      - name: Deploy Project
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: ./dist
          clean: false

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: target/wasm32-unknown-unknown/release/t5-rs-desktop.wasm
